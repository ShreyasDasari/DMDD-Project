create or replace PACKAGE PRODUCT_MANAGEMENT AS

PROCEDURE ADD_NEW_PRODUCT(
        	IN_PRODID PRODUCT.PROD_ID%TYPE,
        	IN_SID PRODUCT.SUPPLIER_ID%TYPE,
        	IN_PNAME PRODUCT.PRODUCT_NAME%TYPE,
        	IN_CATE PRODUCT.CATEGORIES%TYPE,
        	IN_PRICE PRODUCT.PRICE%TYPE,
        	IN_INVENTORY PRODUCT.INVENTORY%TYPE
        	);
PROCEDURE UPDATE_PRODUCT_PRICE(
        	P_NAME VARCHAR,
        	P_NEW_PRICE PRODUCT.PRICE%TYPE
        	);
FUNCTION GET_PRODUCT_PRICE(F_PNAME IN VARCHAR) RETURN NUMBER;

END PRODUCT_MANAGEMENT;
/

create or replace PACKAGE BODY PRODUCT_MANAGEMENT AS

    PROCEDURE ADD_NEW_PRODUCT(IN_PRODID PRODUCT.PROD_ID%TYPE,
        IN_SID PRODUCT.SUPPLIER_ID%TYPE,
        IN_PNAME PRODUCT.PRODUCT_NAME%TYPE,
        IN_CATE PRODUCT.CATEGORIES%TYPE,
        IN_PRICE PRODUCT.PRICE%TYPE,
        IN_INVENTORY PRODUCT.INVENTORY%TYPE
        )
    AS
        INVALID_INPUTS EXCEPTION;
BEGIN

    IF IN_INVENTORY <= 0
    OR LENGTH(IN_PNAME) <= 0
    OR IN_PRICE <= 0
    THEN
        RAISE INVALID_INPUTS;
    END IF;

    INSERT INTO PRODUCT(
        "PROD_ID",
        "SUPPLIER_ID",
        "PRODUCT_NAME",
        "CATEGORIES",
        "PRICE",
        "INVENTORY"
    ) VALUES (
        IN_PRODID,
        IN_SID,
        IN_PNAME,
        IN_CATE,
        IN_PRICE,
        IN_INVENTORY
    );

COMMIT;

EXCEPTION
WHEN INVALID_INPUTS
THEN
    DBMS_OUTPUT.PUT_LINE('INPUTS PROVIDED BY USER ARE NOT CORRECT');
END ADD_NEW_PRODUCT;


    PROCEDURE UPDATE_PRODUCT_PRICE(
        P_NAME VARCHAR,
        P_NEW_PRICE PRODUCT.PRICE%TYPE
        )
IS
BEGIN

    UPDATE PRODUCT SET PRICE = P_NEW_PRICE
    WHERE PRODUCT_NAME = P_NAME;

COMMIT;
END UPDATE_PRODUCT_PRICE;

    FUNCTION GET_PRODUCT_PRICE(F_PNAME IN VARCHAR) RETURN NUMBER
    IS
        V_IS_VALID PRODUCT.PRODUCT_NAME%TYPE;
        EX_INVALID_PNAME EXCEPTION;
        V_PRICE PRODUCT.PRICE%TYPE;

        
    BEGIN
        SELECT COUNT(*)
        INTO V_IS_VALID
        FROM PRODUCT
        WHERE PRODUCT_NAME = F_PNAME;

        IF V_IS_VALID <= 0
        THEN
            RAISE EX_INVALID_PNAME;

        END IF;

        SELECT PRICE
        INTO V_PRICE
        FROM PRODUCT
        WHERE PRODUCT_NAME = F_PNAME;

        RETURN V_PRICE;
    EXCEPTION
        WHEN EX_INVALID_PNAME
        THEN
        DBMS_OUTPUT.PUT_LINE('PLEASE ENTER AN VALID PRODUCT NAME');
        RETURN -1;
        WHEN OTHERS
        THEN DBMS_OUTPUT.PUT_LINE(SQLERRM);
        RETURN SQLCODE;
    END GET_PRODUCT_PRICE;

END PRODUCT_MANAGEMENT;
/